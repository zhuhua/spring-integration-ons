<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns="http://www.springframework.org/schema/integration/ons"
            xmlns:xsd="http://www.w3.org/2001/XMLSchema"
            xmlns:tool="http://www.springframework.org/schema/tool"
            xmlns:integration="http://www.springframework.org/schema/integration"
            targetNamespace="http://www.springframework.org/schema/integration/ons"
            elementFormDefault="qualified" attributeFormDefault="unqualified">

    <xsd:import namespace="http://www.springframework.org/schema/beans"/>
    <xsd:import namespace="http://www.springframework.org/schema/tool"/>
    <xsd:import namespace="http://www.springframework.org/schema/integration"
                schemaLocation="http://www.springframework.org/schema/integration/spring-integration-4.3.xsd"/>

    <xsd:annotation>
        <xsd:documentation>
            <![CDATA[
                Defines the configuration elements for the Spring Integration
                Ons Adapters.
		    ]]>
        </xsd:documentation>
    </xsd:annotation>

    <xsd:element name="message-driven-channel-adapter">
        <xsd:annotation>
            <xsd:documentation>
                Defines a Message Producing Endpoint for the
                'org.springframework.integration.ons.inbound.OnsMessageDrivenChannelAdapter' that
                subscribes to the ONS topic(s) and produces messages to the channel.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:attributeGroup ref="coreOnsComponentAttributes"/>
            <xsd:attribute name="channel" type="xsd:string">
                <xsd:annotation>
                    <xsd:appinfo>
                        <tool:annotation kind="ref">
                            <tool:expected-type type="org.springframework.integration.core.MessageChannel"/>
                        </tool:annotation>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="send-timeout" type="xsd:string">
                <xsd:annotation>
                    <xsd:documentation><![CDATA[
						Allows you to specify how long this inbound-channel-adapter
						will wait for the message
						to be sent successfully to the message channel, before throwing
						an exception.
						This only applies when the channel might block (such as a bounded QueueChannel
						that is full).
					]]>
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="error-channel" type="xsd:string">
                <xsd:annotation>
                    <xsd:appinfo>
                        <tool:annotation kind="ref">
                            <tool:expected-type type="org.springframework.messaging.MessageChannel"/>
                        </tool:annotation>
                    </xsd:appinfo>
                    <xsd:documentation>
                        If a downstream exception is thrown and an error-channel is specified,
                        the MessagingException will be sent to this channel. Otherwise, any such exception
                        will be logged.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="outbound-channel-adapter">
        <xsd:annotation>
            <xsd:documentation>
                Configures a Consumer Endpoint for the
                'org.springframework.integration.ons.outbound.OnsPahoMessageDrivenChannelAdapter'
                that sends messages to the ONS topic.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:all>
                <xsd:element ref="integration:poller" minOccurs="0" maxOccurs="1"/>
                <xsd:element name="request-handler-advice-chain" type="integration:handlerAdviceChainType"
                             minOccurs="0" maxOccurs="1"/>
            </xsd:all>
            <xsd:attributeGroup ref="coreOnsComponentAttributes"/>
            <xsd:attribute name="channel" type="xsd:string">
                <xsd:annotation>
                    <xsd:appinfo>
                        <xsd:documentation>
                            Channel from which messages will be output.
                            When a message is sent to this channel it will
                            cause the query
                            to be executed.
                        </xsd:documentation>
                        <tool:annotation kind="ref">
                            <tool:expected-type type="org.springframework.messaging.MessageChannel"/>
                        </tool:annotation>
                    </xsd:appinfo>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="async">
                <xsd:annotation>
                    <xsd:documentation>
                        Specifies that sends should not block, with the thread returning
                        immediately the message is sent. When 'true', message
                        sent and message delivery events can be published; see 'async-events'.
                        Default: 'false'.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
        </xsd:complexType>
    </xsd:element>

    <xsd:attributeGroup name="coreOnsComponentAttributes">
        <xsd:attribute name="id" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>
                    Identifies the underlying Spring bean definition, which is an
                    instance of either 'EventDrivenConsumer' or 'PollingConsumer',
                    depending on whether the component's input channel is a
                    'SubscribableChannel' or 'PollableChannel'.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="auto-startup" default="true" use="optional">
            <xsd:annotation>
                <xsd:documentation>
                    Flag to indicate that the component should start automatically
                    on startup (default true).
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="xsd:boolean xsd:string" />
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="phase" use="optional">
            <xsd:annotation>
                <xsd:documentation>
                    Flag to indicate the phase in which the component should start automatically
                    on startup. See SmartLifecycle.
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union memberTypes="xsd:integer xsd:string" />
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="client-factory" type="xsd:string" use="required">
            <xsd:annotation>
                <xsd:appinfo>
                    <xsd:documentation>
                        <![CDATA[
                            An OnsClientFactory used to create clients and connection options if you wish to
                            override the defaults. Default is DefaultOnsClientFactory.
					    ]]>
                    </xsd:documentation>
                    <tool:annotation kind="ref">
                        <tool:expected-type type="org.springframework.integration.ons.core.OnsClientFactory"/>
                    </tool:annotation>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="topic" type="xsd:string" use="required">
            <xsd:annotation>
                <xsd:documentation>
                    Specifies one or more (comma-delimited) topics on which to listen for messages.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="converter" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:appinfo>
                    <xsd:documentation>
                        <![CDATA[
                            A message converter to convert Spring Integration Message<String> to/from
                            a OnsMessage. Default is DefaultOnsMessageConverter.
					    ]]>
                    </xsd:documentation>
                    <tool:annotation kind="ref">
                        <tool:expected-type type="org.springframework.integration.ons.support.OnsMessageConverter"/>
                    </tool:annotation>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:attributeGroup>

</xsd:schema>